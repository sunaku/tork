.TH TORK\-ENGINE 1 2014\-03\-04 19.7.0
.SH NAME
.PP
tork\-engine \- wraps 
.BR tork-master (1) 
with bookkeeping
.SH SYNOPSIS
.PP
\fB\fCtork\-engine\fR [\fIOPTION\fP]...
.SH DESCRIPTION
.PP
This program uses 
.BR tork-master (1) 
to run tests and keeps track of the results.
.PP
This program can be controlled remotely by multiple 
.BR tork-remote (1) 
instances.
.SS Input
.PP
This program reads the following commands, which are single\-line JSON arrays,
from stdin and then performs the associated actions.  For lines read from
stdin that are single\-line JSON arrays, it splits each of them into an array
of words, using the same word\-splitting algorithm as 
.BR sh (1), 
before processing
them.  For example, the line \fB\fCa "b c"\fR is split into the \fB\fC["a", "b c"]\fR array.
.TP
\fB\fC["reabsorb_overhead"]\fR
Stops any test files that are currently running, reabsorbs the test
execution overhead, and then re\-runs those stopped test files.
.TP
\fB\fC["run_test_file"\fR, \fItest_file\fP\fB\fC,\fR \fIline_numbers\fP\&...\fB\fC]\fR
Runs tests that correspond to the given sequence of \fIline_numbers\fP in the
given \fItest_file\fP\&.  If no \fIline_numbers\fP are given, then only those lines
that have changed since the last run of \fItest_file\fP will be substituted.
If any \fIline_numbers\fP are zero, then the entire \fItest_file\fP will be run.
.TP
\fB\fC["run_test_files"\fR, \fItest_files_with_optional_line_numbers\fP\fB\fC]\fR
Calls the \fB\fCrun_test_file\fR command once for each item in the given array.
.TP
\fB\fC["stop_running_test_files"\fR, \fIsignal\fP\fB\fC]\fR
Stops test files that are currently running by sending the given \fIsignal\fP
(optional; defaults to "SIGTERM") to their respective worker processes.
.TP
\fB\fC["rerun_passed_test_files"]\fR
Runs all test files that have passed during their most recent run.
.TP
\fB\fC["rerun_failed_test_files"]\fR
Runs all test files that have failed during their most recent run.
.TP
\fB\fC["quit"]\fR
Stops all tests that are currently running and exits.
.SS Output
.PP
This program prints the following messages, which are single\-line JSON arrays,
to stdout.
.TP
\fB\fC["idle"]\fR
All tests have finished running and no tests are queued for running either.
.TP
\fB\fC["pass_now_fail",\fR \fItest_file\fP\fB\fC,\fR \fImessage\fP\fB\fC]\fR
A previously passing \fItest_file\fP has now failed.  See \fImessage\fP for details.
.TP
\fB\fC["fail_now_pass",\fR \fItest_file\fP\fB\fC,\fR \fImessage\fP\fB\fC]\fR
A previously failing \fItest_file\fP has now passed.  See \fImessage\fP for details.
.TP
\fI\&...\fP
Messages from 
.BR tork-master (1) 
are also reproduced here.
.SH OPTIONS
.TP
\fB\fC\-h\fR, \fB\fC\-\-help\fR
Show this help manual.
.SH FILES
.TP
\fI\&.tork/config.rb\fP
Optional Ruby script that is loaded inside the driver process on startup.
It can read and change the \fB\fCENV['TORK_CONFIGS']\fR environment variable.
.TP
\fI\&.tork/engine.rb\fP
Optional Ruby script that is loaded inside the master process on startup.
.SH ENVIRONMENT
.PP
See 
.BR tork (1).
.SH SEE ALSO
.PP
.BR tork (1), 
.BR tork-remote (1), 
.BR tork-master (1)